<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="1370" height="768" enterFrame="tick()"
	horizontalScrollPolicy="off" verticalScrollPolicy="off" backgroundColor="0x0">

	<mx:Style>
	
		/*
		@font-face {
			src: url("../media/fonts/NeoSansIntel.ttf");
			font-family: NeoSansIntel;
			font-style: normal;
			font-weight: normal;
		}
		*/
		
		.headerText {
			font-family: "Neo Sans Intel Light";
			font-size: 24;
			color: #ffffff;
			letter-spacing: 2;
		}
		
		.statusSmall {
			font-family: "Neo Sans Intel";
			font-size: 14;
			color: #0079bc;
			letter-spacing: 2;
		}
		
		.status {
			font-family: "Neo Sans Intel";
			font-size: 24;
			color: #000000;
			letter-spacing: 2;
		}
		
		.statusBig {
			font-family: "Neo Sans Intel Light";
			font-size: 82;
			color: #000000;
			
			padding-top: 0;
			padding-bottom: 0;
			letter-spacing: 2;
		}
	</mx:Style>

	<mx:Script>

	
		<![CDATA[
		
			import com.creatorsproject.data.PartyEvent;
			import com.creatorsproject.data.DataConstants;
			import com.creatorsproject.data.PartyStatus;
			import mx.events.CollectionEventKind;
			import com.creatorsproject.ui.tv.StatusCard;
			import mx.events.CollectionEvent;
			import com.creatorsproject.data.PartyData;
		
			[Bindable]
			public var _partyData:PartyData;
			public var _nextEvents:Array;
			
			public var _isAnimatingMajor:Boolean = false;
			
			public var _fillColors:Array = [ 0xED1C8F, 0xf8941d, 0x00AFDB ];
			public var _fillCounter:int = 0;
			
			/**
			 * Entry Point
			 */
			public function init(isLocal:Boolean = true):void {
				DataConstants.isLocal = isLocal
				initWindow.visible = false;
				
				_partyData = new PartyData();
				_partyData.addEventListener(Event.COMPLETE, onPartyDataComplete);
				_partyData.addEventListener("newMajor", onNewMajor);
				_partyData.statuses.addEventListener(CollectionEvent.COLLECTION_CHANGE, onStatusChange);
				
				_partyData.loadData();
				_partyData.startLiveUpdating();
			}
			
			private function onPartyDataComplete(event:Event):void {
				_nextEvents = _partyData.nextEvents;
				setEventAlert();
			}
			
			private function onNewMajor(event:Event):void {
				var newMajor:PartyStatus = _partyData.latestMajor;
				if(newMajor) {
					_fillCounter = (_fillCounter + 1) % _fillColors.length;
					
					this.majorStatus.text = newMajor.status;
					
					if(! _isAnimatingMajor) {
						_isAnimatingMajor = true;
						this.addEventListener(Event.ENTER_FRAME, onMajorFrame);
						step = 0;
					}
				}
			}
			
			private var step:int = 0;
			private var maxStep:int = 100;
			
			private function onMajorFrame(event:Event = null):void {
				var g:Graphics = this.majorMatte.graphics;
				var mag:Number;
				var hold:Number = .05
				
				g.clear();
				g.beginFill(_fillColors[_fillCounter], .8);
				if(step < maxStep * hold) {
					mag = this.majorMatte.width * Math.sin(step / (maxStep * hold) * Math.PI / 2);
					g.drawRect(0, 0, mag, majorMatte.height);
				} else if(step > maxStep * (1 - hold)){
					mag = this.majorMatte.width * Math.sin((maxStep - step) / (maxStep * hold) * Math.PI / 2);
					g.drawRect(this.majorMatte.width - mag, 0, mag, majorMatte.height);
				} else {
					g.drawRect(0, 0, this.majorMatte.width, this.majorMatte.height);
				}
				g.endFill();
				
				step ++;
				if(step >= maxStep) {
					g.clear();
					this.removeEventListener(Event.ENTER_FRAME, onMajorFrame);
					_isAnimatingMajor = false;
				}
			}
			
			public function setEventAlert():void {
				if(_nextEvents.length < 1) {
					return;
				}
				var currentDate:Date = new Date();
				var event:PartyEvent = _nextEvents[0];
				
				var secs:int = ((currentDate.getTime() - event.startTime.getTime()) / 1000) % 60;
				var mins:int = ((currentDate.getTime() - event.startTime.getTime()) / 1000 / 60) % 60;
				var hours:int = ((currentDate.getTime() - event.startTime.getTime()) / 1000 / 60 / 60) % 24;
				
				var eventText:String = event.name + " in " + event.roomName + " in " + hours + ":" + mins + ":" + secs;
				this.latestEvent.htmlText = eventText;
			}
			
			private function onStatusChange(event:CollectionEvent):void {
				switch(event.kind) {
					case CollectionEventKind.ADD:
						break;
				}
			}
			
			private function tick():void {
				if(this.currentTime) {
					currentTime.text = (new Date()).toLocaleTimeString();
					
				}
			}
			
			public function toggleFullscreen():void {
				if(stage.displayState == StageDisplayState.NORMAL) {
					stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;
					this.showStatusBar = false;
					this.fullScreenButton.visible = false;
				} else {
					stage.displayState = StageDisplayState.NORMAL;
				}
			}
			
		]]>
	</mx:Script>
	
	<mx:Canvas width="70%" height="90%" bottom="0" left="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:Image source="{_partyData.livePhoto.imageUrl}" horizontalAlign="center" verticalAlign="center" />
		
		<mx:Canvas width="100%" height="100%" backgroundColor="0x000000" backgroundAlpha=".2" id="majorMatte" />
		
		<mx:Text id="majorStatus" color="0xffffff" styleName="statusBig"
			width="66%" height="100%" paddingTop="20" paddingBottom="20" paddingLeft="20" paddingRight="20"/>
	</mx:Canvas>
	
	
	<mx:HBox top="0" left="0" width="70%" backgroundColor="0x000000" height="10%" verticalAlign="middle" paddingLeft="20" paddingRight="20">
		<mx:Label id="currentTime" styleName="headerText" />
		<mx:Spacer height="10" width="100%" />
		<mx:Label id="latestEvent" styleName="headerText" />
	</mx:HBox>
	
	<mx:List id="statusList" top="0" right="0" width="30%" height="100%" 
		backgroundColor="0x000000" borderThickness="0" columnWidth="{this.statusList.width}"
		paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" variableRowHeight="true"
		itemRenderer="com.creatorsproject.ui.tv.StatusCard" dataProvider="{_partyData.statuses}" horizontalScrollPolicy="off" verticalScrollPolicy="off"/>
		
	<mx:TitleWindow horizontalCenter="0" verticalCenter="0" title="Pick your server poison" id="initWindow">
		<mx:Button label="Run Screen from Localhost" click="init()"/>
		<mx:Button label="Run Screen from Production Server" click="init(false)" />
	</mx:TitleWindow>
	
	<mx:Button id="fullScreenButton" label="Toggle your screen" right="10" bottom = "10" click="this.toggleFullscreen()"/>
</mx:WindowedApplication>
